buildscript {
    ext {
        mysqlVersion = '8.0.13'
    }
    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }

    }
    dependencies {
        classpath 'nu.studer:gradle-jooq-plugin:3.0.2'
    }
}

apply plugin: 'java'
apply plugin: 'nu.studer.jooq'

group = 'uca.corporate'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation "javax.persistence:javax.persistence-api:+"
    implementation "mysql:mysql-connector-java:${mysqlVersion}"
    implementation "org.jooq:jooq"
    compileOnly 'org.projectlombok:lombok:+'
    jooqRuntime "mysql:mysql-connector-java:${mysqlVersion}"
}

jooq {
    version = '3.11.9'
    edition = 'OSS'
    corporate(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.cj.jdbc.Driver'
            url = 'jdbc:mysql://192.168.63.195:3306/corporate'
            user = 'uca'
            password = 'password'
            properties {
                property {
                    key = 'ssl'
                    value = 'true'
                }
            }
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                // ...
            }
            database {
                name = 'org.jooq.meta.mysql.MySQLDatabase'
                inputSchema = 'corporate'
                outputSchemaToDefault = true
                recordVersionFields = true
                includes = 'corporate'
                forcedTypes {
                    forcedType {
                        name = 'Boolean'
                        expression = "corporate\\.corporate\\.enabled"
//                        types = 'tinyint'
                    }
                    forcedType {
                        name = 'Integer'
//                        expression = '.*'
                        types = 'tinyint'
                    }
                }
                // ...
            }
            generate {
                javaTimeTypes = true
//                relations = true
//                deprecated = false
//                records = true
//                immutablePojos = true
//                daos = true
//                fluentSetters = true
                // ...
            }
            target {
                packageName = 'jooq.generated.corporate'
                 directory = 'src/main/java'
            }
        }
    }
}


// removes the task dependency from compileJava to generateSampleJooqSchemaSource
project.tasks.getByName('compileJava').dependsOn -= 'generateCorporateJooqSchemaSource'